////////////////////////////////////////////////////////////////////////////////////////////////
// This things-File has been automatically created. Any changes might be overridden.
////////////////////////////////////////////////////////////////////////////////////////////////
Bridge knx:ip:bridge [  
    type="TUNNEL", 
    ipAddress="knx-gateway.fritz.box", 
    //ipAddress="192.168.12.10",
    // portNumber=3671, 
//    localIp="192.168.12.132",
//    readingPause=50, 
//    responseTimeout=10, 
//    readRetriesLimit=3, 
//    autoReconnectPeriod=60,
    localSourceAddr="1.1.2"
] {
##
##
#macro ( padRight $text $length )$display.printf("%-${length}s", $text)#end
#macro ( switch $thing, $knxItem, $key, $name, $additionalItems )
#if ( $thing.items[$knxItem] )
        Type switch        : #padRight($key, 25) #padRight("""$name""", 35) [ ga="$thing.items[$knxItem].address#if ($additionalItems)<$additionalItems#{end}" ]
#end
#end
##
#macro ( string $thing, $knxItem, $key, $name, $additionalItems )
#if ( $thing.items[$knxItem] )
        Type string        : #padRight($key, 25) #padRight("""$name""", 35) [ ga="$thing.items[$knxItem].type:$thing.items[$knxItem].address#if ($additionalItems):<$additionalItems#{end}" ]
#end
#end
##
#*
===========================
Macro's for different things
===========================
*#
##
## Lamp
#macro ( L $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
        Type switch        : switch                   "Schalten"                         [ ga="$thing.items.switch.address" ]
#if ( $thing.items.movement )
        Type string        : movement                 "Bewegung"                         [ ga="$thing.items.movement.type:<$thing.items.movement.address" ]
#end
#if ( $thing.items.presence )
        Type string        : presence                 "Präsenz"                          [ ga="$thing.items.presence.type:<$thing.items.presence.address" ]
#end
#if ( $thing.items.forced )
        Type string        : forced                   "Zwangsführung"                    [ ga="$thing.items.forced.type:<$thing.items.forced.address" ]
#end
    }
#end
##
## Dimmable Lamp
#macro ( LD $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
        Type switch        : switch                   "Schalten"                         [ ga="$thing.items.switch.address" ]
        Type dimmer        : dimmer                   "Dimmer"                           [ switch="$thing.items.switch.address", position="$thing.items.dimmingValue.address", increaseDecrease="$thing.items.dimming.address" ]
    }
#end
##
## Heating
#macro ( H $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
#if ( $thing.items.actualTemperature )
        Type number        : actualTemperature        "Isttemperatur"                    [ ga="$thing.items.actualTemperature.type:<$thing.items.actualTemperature.address" ]
#end
#if ( $thing.items.targetTemperature )
        Type number        : targetTemperature        "Solltemperatur"                   [ ga="$thing.items.targetTemperature.type:<$thing.items.targetTemperature.address" ]
#end
#if ( $thing.items.actualTemperatureFloor )
        Type number        : actualTemperatureFloor   "Isttemperatur Boden"              [ ga="$thing.items.actualTemperatureFloor.type:<$thing.items.actualTemperatureFloor.address" ]
#end
#if ( $thing.items.operatingModeSelection )
        Type string        : operatingModeSelection   "Betriebsart"                      [ ga="$thing.items.operatingModeSelection.type:<$thing.items.operatingModeSelection.address" ]
#end
#if ( $thing.items.switchHeatingCooling )
        Type switch        : switchHeatingCooling     "Heizen/Kühlen"                    [ ga="$thing.items.switchHeatingCooling.type:<$thing.items.switchHeatingCooling.address"]
#end
#if ( $thing.items.controlValue )
        Type number        : controlValue             "Stellwert"                        [ ga="$thing.items.controlValue.type:<$thing.items.controlValue.address"]
#end
    }
#end
##
## Rollershutter
#macro ( R $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
        Type rollershutter : shutter                  "Rollladen"                        [ upDown="$thing.items.move.address", stopMove="$thing.items.step.address", position="$thing.items.setPosition.address#{if} ( $thing.items.currentPosition )+<$thing.items.currentPosition.address#{end}" ]
#if ( $thing.items.currentPosition )
        Type number        : position                 "Aktuelle Position"                [ ga="$thing.items.currentPosition.type:<$thing.items.currentPosition.address" ]
#end
#if ( $thing.items.shading )
        Type switch        : shading                  "Beschattung"                      [ ga="$thing.items.shading.address" ]
#end
#if ( $thing.items.lock )
        Type switch        : lock                     "Sperren"                          [ ga="$thing.items.lock.address" ]
#end
#if ( $thing.items.windowContact )
        Type switch        : windowContact            "Fensterkontakt"                   [ ga="$thing.items.windowContact.address" ]
#end
#if ( $thing.items.closed )
        Type switch        : closed                   "Offen / Geschlossen"              [ ga="$thing.items.closed.address" ]
#end
    }
#end
##
## Jalousie (Shutter)
#macro ( J $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
        Type rollershutter : shutter                  "Jalousie"                         [ upDown="$thing.items.move.address", stopMove="$thing.items.step.address", position="$thing.items.setPosition.address#{if} ( $thing.items.currentPosition )+<$thing.items.currentPosition.address#{end}" ]
#if ( $thing.items.setBladePosition )
        Type number        : setBladePosition         "Lamellenstellung"                 [ ga="$thing.items.setBladePosition.type:<$thing.items.setBladePosition.address" ]
#end
#if ( $thing.items.currentPosition )
        Type number        : position                 "Aktuelle Position"                [ ga="$thing.items.currentPosition.type:<$thing.items.currentPosition.address" ]
#end
#if ( $thing.items.shading )
        Type switch        : shading                  "Beschattung"                      [ ga="$thing.items.shading.address" ]
#end
#if ( $thing.items.lock )
        Type switch        : lock                     "Sperren"                          [ ga="$thing.items.lock.address" ]
#end
#if ( $thing.items.closed )
        Type switch        : closed                   "Offen / Geschlossen"              [ ga="$thing.items.closed.address" ]
#end
    }
#end
##
## Switch
#macro ( S $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
        Type switch        : switch                   "Schalten"                         [ ga="$thing.items.switch.address#if ( $thing.items.status ):<$thing.items.status.address#{end}" ]
#if ( $thing.items.inOperation )
        Type contact       : inOperation              "In Betrieb"                       [ ga="$thing.items.inOperation.address" ]
#end
    }
#end
##
## Window Contact
#macro ( FK $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
        Type contact       : contact                  "Fensterkontakt"                   [ ga="1.019:<$thing.items.windowContact.address" ]
    }
#end
##
## Door Contact
#macro ( TK $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
        Type contact       : contact                  "Türkontakt"                       [ ga="1.019:<$thing.items.doorContact.address" ]
    }
#end
##
## Markise
#macro ( M $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
        Type rollershutter : shutter                  "Markise"                          [ upDown="$thing.items.move.address", stopMove="$thing.items.step.address" #if($thing.items.setPosition ), position="$thing.items.setPosition.address" #{end} ]
#if ( $thing.items.currentPosition )
        Type number        : position                 "Aktuelle Position"                [ ga="$thing.items.currentPosition.type:<$thing.items.currentPosition.address" ]
#end
#if ( $thing.items.lock )
        Type switch        : lock                     "Sperren"                          [ ga="$thing.items.lock.address" ]
#end
#if ( $thing.items.windAlarm )
        Type switch        : windAlarm                "Windalarm"                        [ ga="<$thing.items.windAlarm.address" ]
#end
#if ( $thing.items.rainAlarm )
        Type switch        : rainAlarm                "Regenalarm"                       [ ga="<$thing.items.rainAlarm.address" ]
#end
    }
#end
##
## Alarm
#macro ( A $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
        Type string        : alarm                    "$thing.description"               [ ga="$thing.items.alarm.type:<$thing.items.alarm.address" ]
    }
#end
##
## Weather
#macro ( W $thing )
    Thing device $thing.key "$thing.description" @ "$thing.location" []
    {
#if ( $thing.items.maximumBrightness )
        Type string        : maximumBrightness        "Maximaler Helligkeitswert"        [ ga="$thing.items.maximumBrightness.type:<$thing.items.maximumBrightness.address" ]
#end
#if ( $thing.items.brightnessEast )
        Type string        : brightnessEast           "Helligkeitswert Ost"              [ ga="$thing.items.brightnessEast.type:<$thing.items.brightnessEast.address" ]
#end
#if ( $thing.items.brightnessSouth )
        Type string        : brightnessSouth          "Helligkeitswert Süd"              [ ga="$thing.items.brightnessSouth.type:<$thing.items.brightnessSouth.address" ]
#end
#if ( $thing.items.brightnessWest )
        Type string        : brightnessWest           "Helligkeitswert West"             [ ga="$thing.items.brightnessWest.type:<$thing.items.brightnessWest.address" ]
#end
#if ( $thing.items.temperatureOutside )
        Type string        : temperature              "Außen Temperatur"                 [ ga="$thing.items.temperatureOutside.type:<$thing.items.temperatureOutside.address" ]
#end
#if ( $thing.items.windspeed )
        Type string        : windspeed                "Windgeschwindigkeit (m/s)"        [ ga="$thing.items.windspeed.type:<$thing.items.windspeed.address" ]
#end
#if ( $thing.items.elevation )
        Type string        : elevation                "Elevation"                        [ ga="$thing.items.elevation.type:<$thing.items.elevation.address" ]
#end
#if ( $thing.items.azimut )
        Type string        : azimut                   "Azimut"                           [ ga="$thing.items.azimut.type:<$thing.items.azimut.address" ]
#end
#if ( $thing.items.rainAlarm )
        Type string        : rainAlarm                "Regen"                            [ ga="$thing.items.rainAlarm.type:<$thing.items.rainAlarm.address" ]
#end
#if ( $thing.items.windAlarmShutter )
        Type string        : windAlarmShutter         "Windalarm Jalousie"               [ ga="$thing.items.windAlarmShutter.type:<$thing.items.windAlarmShutter.address" ]
#end
    }
#end
##
#* 
===========================
Main Loop
===========================
*#
#set ($lastLocation = '')
##
#foreach ($thing in $collection.sort($things, ["location", "key"]))
#if ( $lastLocation != $thing.location )
    // $thing.location
#set ($lastLocation = "$thing.location")
#end
##
#evaluate( "#$thing.descriptor.key ( \$thing )" )

#end
##
}
